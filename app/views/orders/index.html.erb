<div class="container mt-4">
  <%# Current Orders Section %>
  <section id="current-orders">
    <h1 class="mb-3">Pedidos Atuais</h1>
    <%= link_to 'Criar Pedido', new_order_path, class: 'btn btn-primary mb-3' %>

    <% if @current_orders.any? %>
      <div class="table-responsive"> <%# Add responsive wrapper %>
        <table class="table table-striped table-hover align-middle">
          <thead>
            <tr>
              <th>ID</th>
              <th>Mesa</th>
              <th>Local</th>
              <th>Status</th>
              <th>Hora</th>
              <th>Total</th>
              <th>Observações</th> <%# New column for observations %>
              <th>Itens</th>
              <th colspan="2">Ações</th>
            </tr>
          </thead>
          <tbody>
            <% @current_orders.each do |order| %>
              <% if (order.order_items&.any? { |item| item&.quantity&.> 0 }) || order.dishes.any? %>
                <tr>
                  <td><%= order.id %></td>
                  <td><%= order.table&.number || "N/A" %></td> <%# Gracefully handle missing table %>
                  <td><%= order.respond_to?(:formatted_order_type) ? order.formatted_order_type : (order.order_type&.humanize || "Presencial") %></td>
                  <td>
                    <span class="badge bg-<%= order.status_badge_class %>">
                      <%= order.status.capitalize %>
                    </span>
                  </td>
                  <td><%= order.created_at.strftime("%Y-%m-%d %H:%M") %></td>
                  <td><%= number_to_currency(order.total) %></td>
                  <td><%= order.observations %></td> <%# Display observations %>
                  <td>
                    <ul class="list-unstyled">
                      <% order.order_items.each do |order_item| %>
                        <% if order_item.quantity && order_item.quantity > 0 %>
                          <li><%= order_item.menu_item.name %> x <%= order_item.quantity %></li>
                        <% end %>
                      <% end %>

                      <% order.dishes.each do |dish| %>
                        <li>(Prato por quilo) (R$ <%= dish.price.to_f %>)</li>
                      <% end %>
                    </ul>
                  </td>
                  <td>
                    <% if order.status == 'pending' %>
                      <%= button_to 'Marcar como Pronto', order_path(order, order: { status: 'ready' }), method: :patch, class: 'btn btn-primary btn-sm' %>
                    <% elsif order.status == 'ready' %>
                      <%= form_with(model: order, url: order_path(order), method: :patch, class: 'd-flex align-items-center', data: {order_id: order.id}) do |form| %>
                        <input type="hidden" name="order[amount_paid]" value="" />
                        <input type="hidden" name="order[status]" value="" />
                        <button type="button" class="btn btn-success btn-sm"
                                data-bs-toggle="modal" data-bs-target="#changeModal"
                                data-order-total="<%= order.total %>" data-order-id="<%= order.id %>">
                          Finalizar & Calcular Troco
                        </button>
                      <% end %>
                    <% end %>
                    <%= link_to 'Editar Pedido', edit_order_path(order), class: 'btn btn-secondary btn-sm my-2' %>
                    <%= button_to 'Cancelar', order_path(order), method: :delete, data: { confirm: 'Tem certeza?' }, class: 'btn btn-danger btn-sm' %>

                    <%= button_to 'Imprimir', url_for(controller: 'orders', action: 'print_order', id: order.id, method: :post), class: 'btn btn-info btn-sm my-2' %>
                  </td>
                </tr>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    <% else %>
      <p class="text-center text-muted">Sem pedidos atuais.</p>
    <% end %>
  </section>

  <%# Completed Orders Section %>
  <section id="completed-orders" class="mt-5">
    <h1 class="mb-3">Pedidos Completos</h1>

    <% if @completed_orders.any? %>
      <div class="table-responsive"> <%# Add responsive wrapper %>
        <table class="table table-striped table-hover align-middle">
          <thead>
            <tr>
              <th>ID</th>
              <th>Mesa</th>
              <th>Status</th>
              <th>Hora Finalização</th>
              <th>Total</th>
              <th>Observações</th>
              <th>Itens</th>
              <th>Ações</th>
            </tr>
          </thead>
          <tbody>
            <% @completed_orders.each do |order| %>
              <% if (order.order_items&.any? { |item| item&.quantity&.> 0 }) || order.dishes.any? %>
                <tr>
                  <td><%= order.id %></td>
                  <td><%= order.table&.number || "N/A" %></td> <%# Gracefully handle missing table %>
                  <td>
                    <span class="badge bg-<%= order.status_badge_class %>">
                      <%= order.status.capitalize %>
                    </span>
                  "</td>
                  <td><%= order.updated_at.strftime("%Y-%m-%d %H:%M") %></td>
                  <td><%= number_to_currency(order.total) %></td>
                  <td><%= order.observations %></td> <%# Display observations %>
                  <td>
                    <ul class="list-unstyled">
                      <% order.order_items.each do |order_item| %>
                        <% if order_item.quantity > 0 %>
                          <li><%= order_item.menu_item.name %> x <%= order_item.quantity %></li>
                        <% end %>
                      <% end %>

                      <% order.dishes.each do |dish| %>
                        <li> ("Prato por quilo") (R$ <%= dish.price.to_f %>)</li>
                      <% end %>
                    </ul>
                  </td>
                  </td>
                  <td>
                    <%= link_to 'Editar Pedido', edit_order_path(order), class: 'btn btn-secondary btn-sm my-2' %>

                    <% unless order.printed? %>
                      <%= button_to 'Imprimir', url_for(controller: 'orders', action: 'print_order', id: order.id, method: :post), class: 'btn btn-info btn-sm' %>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    <% else %>
      <p class="text-center text-muted">Sem pedidos completos.</p>
    <% end %>
  </section>
</div>

<%# Modal %>
<div id="changeModal" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Calcular
 Troco</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">

          <label for="amountPaid" class="form-label">Quantia Paga:</label>
          <input type="number" step="0.01" min="0" id="amountPaid" class="form-control" />
        </div>
        <div id="changeResult"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
        <button type="button"
 id="confirmPayment" class="btn btn-primary">Confirmar Pagamento</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const changeModal = document.getElementById("changeModal");
    const amountPaidInput = document.getElementById("amountPaid");
    const changeResult = document.getElementById("changeResult");
    const confirmPaymentButton
 = document.getElementById("confirmPayment");

    let currentOrder = null; // Variable to store the current order

    changeModal.addEventListener("shown.bs.modal", function (event) {
      const button = event.relatedTarget;
      const orderTotal = parseFloat(button.dataset.orderTotal);
      currentOrder = button; // Store the button element itself

      amountPaidInput.min = orderTotal; // Set minimum amount

      amountPaidInput.addEventListener("input", function () {
        const amountPaid = parseFloat(this.value) || 0;
        const change = amountPaid - orderTotal;

        changeResult.textContent = change >= 0
          ? `Troco: ${change.toFixed(2)}`
          : "A quantia paga é menor que o total do pedido.";
      });
    });

    confirmPaymentButton.addEventListener("click", function () {
      const amountPaid = parseFloat(amountPaidInput.value);
      const orderTotal = parseFloat(currentOrder.dataset.orderTotal); // Fetch order total from the button element

      if (amountPaid >= orderTotal) {
        // Submit the form using a regular form submission
        const form = document.querySelector(`form[data-order-id="${currentOrder.dataset.orderId}"]`);
        const amountPaidInput = form.querySelector('input[name="order[amount_paid]"]');
        const statusInput = form.querySelector('input[name="order[status]"]');

        amountPaidInput.value = amountPaid;
        statusInput.value = 'completed';

        form.submit();
      } else {
        changeResult.textContent = "A quantia paga é menor que o total do pedido.";
      }
    });
  });
</script>
